# Generated by Django 4.2.7 on 2025-10-20 08:28

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('journal', '0010_remove_trade_trade_status_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='trade',
            name='entry_time',
            field=models.TimeField(default='09:30:00', help_text='Time when trade was entered'),
        ),
        migrations.AddField(
            model_name='trade',
            name='exit_time',
            field=models.TimeField(blank=True, help_text='Time when trade was exited', null=True),
        ),
        migrations.AddField(
            model_name='trade',
            name='risk_per_trade',
            field=models.FloatField(default=1.0, help_text='Risk percentage per trade', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AddField(
            model_name='trade',
            name='trade_status',
            field=models.CharField(choices=[('OPEN', 'Open'), ('CLOSED', 'Closed'), ('CANCELLED', 'Cancelled')], default='OPEN', help_text='Current status of the trade', max_length=10),
        ),
        migrations.AddField(
            model_name='tradinghabit',
            name='last_performed_date',
            field=models.DateField(blank=True, help_text='Last date when habit was performed', null=True),
        ),
        migrations.AddField(
            model_name='tradinghabit',
            name='streak_count',
            field=models.IntegerField(default=0, help_text='Current streak count'),
        ),
        migrations.CreateModel(
            name='RiskManagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_daily_loss', models.FloatField(default=1000, help_text='Maximum daily loss limit')),
                ('max_daily_trades', models.IntegerField(default=10, help_text='Maximum trades per day')),
                ('max_position_size', models.FloatField(default=10000, help_text='Maximum position size')),
                ('max_risk_per_trade', models.FloatField(default=2.0, help_text='Maximum risk percentage per trade', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('max_portfolio_risk', models.FloatField(default=10.0, help_text='Maximum portfolio risk percentage', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('max_correlation_exposure', models.FloatField(default=30.0, help_text='Maximum correlation exposure percentage', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('max_drawdown_limit', models.FloatField(default=15.0, help_text='Maximum drawdown limit percentage', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('stop_trading_drawdown', models.FloatField(default=20.0, help_text='Stop trading at this drawdown percentage', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('max_trading_hours_per_day', models.IntegerField(default=8, help_text='Maximum trading hours per day')),
                ('mandatory_break_duration', models.IntegerField(default=30, help_text='Mandatory break duration in minutes')),
                ('enable_loss_alerts', models.BooleanField(default=True, help_text='Enable loss alerts')),
                ('enable_drawdown_alerts', models.BooleanField(default=True, help_text='Enable drawdown alerts')),
                ('enable_position_size_alerts', models.BooleanField(default=True, help_text='Enable position size alerts')),
                ('is_active', models.BooleanField(default=True, help_text='Is this risk management active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='risk_management', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
