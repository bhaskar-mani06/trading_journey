# Generated by Django 4.2.7 on 2025-10-16 07:35

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='WeeklyReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week_start_date', models.DateField(help_text='Start date of the week being reviewed')),
                ('week_end_date', models.DateField(help_text='End date of the week being reviewed')),
                ('what_went_well', models.TextField(help_text='What went well this week?')),
                ('mistakes_repeated', models.TextField(help_text='What mistakes did I repeat?')),
                ('best_setup', models.TextField(help_text='Which setup worked best?')),
                ('improvements_next_week', models.TextField(help_text='What will I improve next week?')),
                ('total_trades', models.PositiveIntegerField(default=0)),
                ('winning_trades', models.PositiveIntegerField(default=0)),
                ('losing_trades', models.PositiveIntegerField(default=0)),
                ('total_pnl', models.FloatField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weekly_reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-week_start_date'],
                'unique_together': {('user', 'week_start_date')},
            },
        ),
        migrations.CreateModel(
            name='Trade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='The day the trade was taken')),
                ('symbol', models.CharField(help_text='Stock, forex pair, or asset name', max_length=20)),
                ('trade_type', models.CharField(choices=[('LONG', 'Long'), ('SHORT', 'Short')], max_length=5)),
                ('entry_price', models.FloatField(help_text='Entry price of the trade', validators=[django.core.validators.MinValueValidator(0)])),
                ('exit_price', models.FloatField(help_text='Exit price of the trade', validators=[django.core.validators.MinValueValidator(0)])),
                ('quantity', models.PositiveIntegerField(help_text='Number of shares or lot size')),
                ('stop_loss', models.FloatField(help_text='Defined stop loss', validators=[django.core.validators.MinValueValidator(0)])),
                ('target_price', models.FloatField(help_text='Take profit level', validators=[django.core.validators.MinValueValidator(0)])),
                ('exit_reason', models.TextField(help_text='Reason for exiting the trade')),
                ('profit_loss', models.FloatField(help_text='Actual profit or loss amount')),
                ('percentage_gain_loss', models.FloatField(help_text='Profit or loss in percentage')),
                ('setup_type', models.CharField(choices=[('BREAKOUT', 'Breakout'), ('PULLBACK', 'Pullback'), ('NEWS_BASED', 'News-based'), ('TECHNICAL', 'Technical Analysis'), ('FUNDAMENTAL', 'Fundamental Analysis'), ('SCALPING', 'Scalping'), ('SWING', 'Swing Trading'), ('POSITION', 'Position Trading'), ('OTHER', 'Other')], help_text='Type of setup used', max_length=20)),
                ('confidence_level', models.IntegerField(help_text='Confidence rating (1-10)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('screenshot_before', models.ImageField(blank=True, help_text='Chart before entering the trade', null=True, upload_to='trade_screenshots/before/')),
                ('screenshot_after', models.ImageField(blank=True, help_text='Chart after closing the trade', null=True, upload_to='trade_screenshots/after/')),
                ('emotion_notes', models.TextField(blank=True, help_text='Emotions or psychological state during the trade')),
                ('learning_notes', models.TextField(blank=True, help_text='Mistakes and lessons learned from this trade')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trades', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date', '-created_at'],
                'indexes': [models.Index(fields=['date'], name='journal_tra_date_2ed0a2_idx'), models.Index(fields=['symbol'], name='journal_tra_symbol_53aab0_idx'), models.Index(fields=['trade_type'], name='journal_tra_trade_t_aa9ce4_idx'), models.Index(fields=['setup_type'], name='journal_tra_setup_t_ebd50e_idx')],
            },
        ),
        migrations.CreateModel(
            name='MonthlyReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.DateField(help_text='Month being reviewed (first day of the month)')),
                ('monthly_summary', models.TextField(help_text='Overall monthly summary')),
                ('key_achievements', models.TextField(help_text='Key achievements this month')),
                ('major_mistakes', models.TextField(help_text='Major mistakes and lessons')),
                ('strategy_improvements', models.TextField(help_text='Strategy improvements made')),
                ('goals_next_month', models.TextField(help_text='Goals for next month')),
                ('total_trades', models.PositiveIntegerField(default=0)),
                ('winning_trades', models.PositiveIntegerField(default=0)),
                ('losing_trades', models.PositiveIntegerField(default=0)),
                ('total_pnl', models.FloatField(default=0)),
                ('max_drawdown', models.FloatField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monthly_reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-month'],
                'unique_together': {('user', 'month')},
            },
        ),
    ]
