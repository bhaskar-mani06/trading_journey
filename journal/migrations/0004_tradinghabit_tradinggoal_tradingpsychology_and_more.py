# Generated by Django 4.2.7 on 2025-10-16 10:22

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('journal', '0003_remove_userprofile_user_delete_otpverification_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='TradingHabit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('habit_type', models.CharField(choices=[('GOOD', 'Good Habit'), ('BAD', 'Bad Habit')], max_length=10)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('frequency', models.CharField(help_text='Daily, Weekly, etc.', max_length=50)),
                ('target_count', models.IntegerField(default=1, help_text='Target occurrences')),
                ('current_count', models.IntegerField(default=0)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_achieved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trading_habits', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TradingGoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goal_type', models.CharField(choices=[('PROFIT', 'Profit Target'), ('WIN_RATE', 'Win Rate Target'), ('TRADE_COUNT', 'Trade Count Target'), ('RISK_MANAGEMENT', 'Risk Management'), ('LEARNING', 'Learning Goal'), ('HABIT', 'Habit Formation')], max_length=20)),
                ('period', models.CharField(choices=[('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('MONTHLY', 'Monthly'), ('QUARTERLY', 'Quarterly'), ('YEARLY', 'Yearly')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('target_value', models.FloatField(help_text='Target value to achieve')),
                ('current_value', models.FloatField(default=0, help_text='Current progress')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_achieved', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trading_goals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TradingPsychology',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('pre_trade_emotion', models.CharField(choices=[('FEAR', 'Fear'), ('GREED', 'Greed'), ('FOMO', 'FOMO (Fear of Missing Out)'), ('CONFIDENCE', 'Confidence'), ('ANXIETY', 'Anxiety'), ('EXCITEMENT', 'Excitement'), ('FRUSTRATION', 'Frustration'), ('CALM', 'Calm'), ('UNCERTAINTY', 'Uncertainty'), ('HOPEFUL', 'Hopeful')], max_length=20)),
                ('pre_trade_confidence', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('pre_trade_stress_level', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('during_trade_emotion', models.CharField(blank=True, choices=[('FEAR', 'Fear'), ('GREED', 'Greed'), ('FOMO', 'FOMO (Fear of Missing Out)'), ('CONFIDENCE', 'Confidence'), ('ANXIETY', 'Anxiety'), ('EXCITEMENT', 'Excitement'), ('FRUSTRATION', 'Frustration'), ('CALM', 'Calm'), ('UNCERTAINTY', 'Uncertainty'), ('HOPEFUL', 'Hopeful')], max_length=20, null=True)),
                ('during_trade_confidence', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('post_trade_emotion', models.CharField(choices=[('FEAR', 'Fear'), ('GREED', 'Greed'), ('FOMO', 'FOMO (Fear of Missing Out)'), ('CONFIDENCE', 'Confidence'), ('ANXIETY', 'Anxiety'), ('EXCITEMENT', 'Excitement'), ('FRUSTRATION', 'Frustration'), ('CALM', 'Calm'), ('UNCERTAINTY', 'Uncertainty'), ('HOPEFUL', 'Hopeful')], max_length=20)),
                ('post_trade_confidence', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('post_trade_satisfaction', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('sleep_quality', models.IntegerField(help_text='Sleep quality (1-10)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('stress_level', models.IntegerField(help_text='Overall stress level (1-10)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('focus_level', models.IntegerField(help_text='Focus level during trading (1-10)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('mental_notes', models.TextField(blank=True, help_text='Mental state observations')),
                ('improvement_notes', models.TextField(blank=True, help_text='Areas for mental improvement')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='psychology_records', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date', '-created_at'],
                'unique_together': {('user', 'date')},
            },
        ),
        migrations.CreateModel(
            name='MarketCondition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('market_condition', models.CharField(choices=[('BULLISH', 'Bullish'), ('BEARISH', 'Bearish'), ('SIDEWAYS', 'Sideways'), ('VOLATILE', 'Volatile'), ('TRENDING', 'Trending'), ('RANGING', 'Ranging')], max_length=20)),
                ('volatility_level', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('sentiment', models.CharField(choices=[('FEAR', 'Fear'), ('GREED', 'Greed'), ('FOMO', 'FOMO (Fear of Missing Out)'), ('CONFIDENCE', 'Confidence'), ('ANXIETY', 'Anxiety'), ('EXCITEMENT', 'Excitement'), ('FRUSTRATION', 'Frustration'), ('CALM', 'Calm'), ('UNCERTAINTY', 'Uncertainty'), ('HOPEFUL', 'Hopeful')], max_length=20)),
                ('market_index', models.CharField(blank=True, help_text='Nifty, Sensex, etc.', max_length=50)),
                ('index_value', models.FloatField(blank=True, null=True)),
                ('volume', models.BigIntegerField(blank=True, null=True)),
                ('major_news', models.TextField(blank=True, help_text='Major market news')),
                ('news_impact', models.IntegerField(blank=True, help_text='News impact (1-10)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='market_conditions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('user', 'date')},
            },
        ),
    ]
